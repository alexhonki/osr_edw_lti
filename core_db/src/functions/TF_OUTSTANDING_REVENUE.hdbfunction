FUNCTION "functions::TF_OUTSTANDING_REVENUE" 
	(
		IM_FILTER NVARCHAR(5000) default '',
		IM_FROM	  VARCHAR(6),
		IM_TO     VARCHAR(6),
		IM_REACTION_TYPE VARCHAR(200) default ''
	)
       RETURNS TABLE (
		"TIME_SEGMENT" 			INT,
		"CURRENCY" 				VARCHAR(3),
		"INCOME_LOSS"			DOUBLE
	) 
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
	
	-- Default Reaction Type
	DECLARE LV_REACTION_TYPE 	VARCHAR(200);
	--DECLARE VARIABLE FOR CURRENCY
	DECLARE LV_CURRENCY VARCHAR(3);
	
	
	-- Get the Reaction type configured ---> needs to be extended in future to support multiple
	IF :IM_REACTION_TYPE IS NULL OR LENGTH(:IM_REACTION_TYPE) = 0 THEN
		CALL "procedures.utils::PR_CONF_GET_REACTION_TYPE"(:LV_REACTION_TYPE);
	ELSE
		LV_REACTION_TYPE := :IM_REACTION_TYPE;
	END IF;

	--CURRENCY
	SELECT STR_VALUE INTO LV_CURRENCY FROM "models.adm::CV_CONFIG" 
	WHERE BUCKET_ID = 'CURRENCY' AND SEQ = 1;

	-- FIltered data
	IF length(:IM_FILTER) > 0 AND :IM_FILTER IS NOT NULL THEN
		RETURN SELECT 	"TIME_SEGMENT",
							"CURRENCY",
							"INCOME_LOSS"
							from "functions::TF_OUTSTANDING_REVENUE_FILTER"(:IM_FILTER,:IM_FROM,:IM_TO,:LV_REACTION_TYPE); 
	
	ELSE

		RETURN  SELECT "TIME_SEGMENT",
						:LV_CURRENCY AS "CURRENCY",
						"INCOME_LOSS"
				FROM (
				
						SELECT 
							"INIT_TIME_SEGMENT" "TIME_SEGMENT",
							TO_DECIMAL(SUM("VALUE"),34,2) AS "INCOME_LOSS"
							FROM "db::app.CustomerValues" 
							where "INIT_TIME_SEGMENT" <= TO_INT(:IM_TO) AND "INIT_TIME_SEGMENT" >= TO_INT(:IM_FROM)
							GROUP BY "INIT_TIME_SEGMENT"
					);
	END IF;
END;