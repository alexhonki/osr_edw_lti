FUNCTION "functions::TS_UTIL_FORMAT_AUDIT_LOG"
       (
		"STATEMENT1" NVARCHAR(1000),
		"STATEMENT2" NVARCHAR(1000),
		"COLUMNS"	 NVARCHAR(1000)
	)
	RETURNS result NVARCHAR(5000)
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
DECLARE LV_STATEMENT_1 	NVARCHAR(2000); 
	DECLARE LV_STATEMENT_2 	NVARCHAR(2000);
	DECLARE LV_COUNT		INT; 
	
	DECLARE LV_COLUMN		NVARCHAR(100) ARRAY;
	DECLARE LV_VALUE 		NVARCHAR(300) ARRAY;
	DECLARE LV_FOUND		INT;
	DECLARE LV_INDEX 		INT;
		
	-- Strip
	LV_STATEMENT_1 := replace(replace (:STATEMENT1, ', ',',' ),'"','');
	LV_STATEMENT_2 := replace (:STATEMENT2, ', ',',' );
	-- Get count of deliminator
	select OCCURRENCES_REGEXPR('(,)' IN :LV_STATEMENT_1) + 1 as "COUNT"  INTO LV_COUNT from "synonyms::dummy";

	
	
	FOR LV_INDEX IN 1..:LV_COUNT DO
	
		IF :LV_COUNT > 0 and :LV_INDEX < :LV_COUNT  THEN

			LV_COLUMN[:LV_INDEX] 	:= SUBSTR_BEFORE (:LV_STATEMENT_1, ',');
			LV_VALUE[:LV_INDEX] 	:= SUBSTR_BEFORE (:LV_STATEMENT_2, ',');
			
			
			LV_STATEMENT_1			:= SUBSTR_AFTER (:LV_STATEMENT_1, ',');
			LV_STATEMENT_2			:= SUBSTR_AFTER (:LV_STATEMENT_2, ',');
		ELSE
			LV_COLUMN[:LV_INDEX] 	:= :LV_STATEMENT_1;
			LV_VALUE[:LV_INDEX] 	:= :LV_STATEMENT_2;			
		END IF;
	 
		SELECT LOCATE_REGEXPR(START '(\b' || :LV_COLUMN[:LV_INDEX] || '\b)' IN :COLUMNS) INTO LV_FOUND FROM "synonyms::dummy";
		
		--IF LOCATE ( :COLUMNS, :LV_COLUMN[:LV_INDEX], 1,1  ) > 0 THEN
		IF :LV_FOUND > 0 THEN
			IF result IS NULL THEN
				result := :LV_COLUMN[:LV_INDEX] || ':' || :LV_VALUE[:LV_INDEX];
			ELSEIF :LV_INDEX >= :LV_COUNT then
				result := result || ', ' || :LV_COLUMN[:LV_INDEX] || ':' || :LV_VALUE[:LV_INDEX];
			ELSE
				result := result || ', ' || :LV_COLUMN[:LV_INDEX] || ':' || :LV_VALUE[:LV_INDEX];
			END IF;
		END IF;
	
	END FOR;
END;