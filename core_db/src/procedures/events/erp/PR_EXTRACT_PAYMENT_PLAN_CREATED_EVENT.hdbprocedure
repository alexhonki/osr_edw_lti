PROCEDURE "procedures.events.erp::PR_EXTRACT_PAYMENT_PLAN_CREATED_EVENT" (
	IN IV_MODE INTEGER DEFAULT 0
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
    AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   DECLARE LV_PYMNT_PLAN_1 NVARCHAR(500) := 'Installment plan created';
   DECLARE LV_PYMNT_PLAN_2 NVARCHAR(500) := 'EPO created';
   
   DECLARE LV_PYMNT_PLAN_1_GRP NVARCHAR(500) := 'Payment Arrangement';
   DECLARE LV_PYMNT_PLAN_2_GRP NVARCHAR(500) := 'Payment Arrangement';
   
   DECLARE LV_PYMNT_PLAN_1_ICON NVARCHAR(500) := 'Payment Arrangement';
   DECLARE LV_PYMNT_PLAN_2_ICON NVARCHAR(500) := 'lead';
   
   DECLARE LV_PYMNT_PLAN_1_MAX_SEQ_ID INTEGER;
   DECLARE LV_PYMNT_PLAN_2_MAX_SEQ_ID INTEGER;
   
   DECLARE LV_MAX_NEW_SEQ_ID INTEGER;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
	
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_PYMNT_PLAN_1);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_PYMNT_PLAN_2);
	
	SELECT OUT_MAX_SEQ_ID into LV_PYMNT_PLAN_1_MAX_SEQ_ID from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_PYMNT_PLAN_1);
	SELECT OUT_MAX_SEQ_ID into LV_PYMNT_PLAN_2_MAX_SEQ_ID from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_PYMNT_PLAN_2);
	IF :LV_PYMNT_PLAN_1_MAX_SEQ_ID IS NULL THEN 
		LV_PYMNT_PLAN_1_MAX_SEQ_ID = 0;
	END IF;
	IF :LV_PYMNT_PLAN_2_MAX_SEQ_ID IS NULL THEN 
		LV_PYMNT_PLAN_2_MAX_SEQ_ID = 0;
	END IF;
	LT_CUST_EDITED_PP_1 = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_PYMNT_PLAN_1_MAX_SEQ_ID;
	LT_CUST_ID_EDITED_PP_1 = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_PP_1;
	
	LT_CUST_EDITED_PP_2 = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_PYMNT_PLAN_2_MAX_SEQ_ID;
	LT_CUST_ID_EDITED_PP_2 = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_PP_2;
	
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_PYMNT_PLAN_1,
		IT_CUST=>:LT_CUST_ID_EDITED_PP_1
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_PYMNT_PLAN_2,
		IT_CUST=>:LT_CUST_ID_EDITED_PP_2
   );
   LT_CUST_ID = SELECT GPART FROM :LT_CUST_EDITED_PP_1 UNION SELECT GPART FROM :LT_CUST_EDITED_PP_2;
   /*Promise to Pay dates*/
	INSERT INTO "db::app.CustomerEvents"
	select 
		SAP.CUST_ID as CUST_ID,
		null as EVENT_ID,
		:LV_PYMNT_PLAN_1_GRP as EVENT_GROUP,
		:LV_PYMNT_PLAN_1 as EVENT_NAME,
		CAST(CreationDate as date) as INIT_DATE,
		cast(EndOfPromiseDate as date) as END_DATE,
		1 as EVENT_VALUE,
		:LV_PYMNT_PLAN_1 as DESCRIPTION,
		LEFT(CreationDate,6)  as INIT_TS,
		LEFT(EndOfPromiseDate,6)  as END_TS
	from (
		select  DFKKPP.GPART, DFKKPP.PPKEY, PPCAT,MIN(ERDAT)as CreationDate,MAX(PRDAT) as EndOfPromiseDate 
			from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPP" DFKKPP
			LEFT JOIN "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPPD" DFKKPPD
			ON DFKKPP.PPKEY=DFKKPPD.PPKEY
			LEFT JOIN "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPPP" DFKKPPP 
			ON DFKKPP.PPKEY=DFKKPPP.PPKEY
			INNER JOIN
			:LT_CUST_ID DELT ON DFKKPP.GPART = DELT.GPART
		WHERE  DFKKPPP.OPBEL IN (SELECT OPBEL FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" WHERE BLART='AB' and KOFIZ='LT')
		GROUP BY DFKKPP.GPART,DFKKPP.PPKEY,PPCAT having PPCAT != 'Z7'
		) as main
	INNER JOIN "db::app.Customer" as SAP on SAP.EXT_ID=main.GPART;
   
   
   	INSERT INTO "db::app.CustomerEvents"
	select 
		SAP.CUST_ID as CUST_ID,
		null as EVENT_ID,
		:LV_PYMNT_PLAN_2_GRP as EVENT_GROUP,
		:LV_PYMNT_PLAN_2 as EVENT_NAME,
		CAST(CreationDate as date) as INIT_DATE,
		cast(EndOfPromiseDate as date) as END_DATE,
		1 as EVENT_VALUE,
		:LV_PYMNT_PLAN_2 as DESCRIPTION,
		LEFT(CreationDate,6)  as INIT_TS,
		LEFT(EndOfPromiseDate,6)  as END_TS
	from (
		select  DFKKPP.GPART, DFKKPP.PPKEY, PPCAT,MIN(ERDAT)as CreationDate,MAX(PRDAT) as EndOfPromiseDate 
			from  "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPP" DFKKPP
			LEFT JOIN "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPPD" DFKKPPD
			ON DFKKPP.PPKEY=DFKKPPD.PPKEY
			LEFT JOIN "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPPP" DFKKPPP 
			ON DFKKPP.PPKEY=DFKKPPP.PPKEY
			INNER JOIN
			:LT_CUST_ID DELT ON DFKKPP.GPART = DELT.GPART
		WHERE  DFKKPPP.OPBEL IN (SELECT OPBEL FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" WHERE BLART='AB' and KOFIZ='LT')
		GROUP BY DFKKPP.GPART,DFKKPP.PPKEY,PPCAT having PPCAT = 'Z7'
		) as main
	INNER JOIN "db::app.Customer" as SAP on SAP.EXT_ID=main.GPART;
	
	-- Generate event ID
    CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'ERP', I_TYPE => 3);	
    
	SELECT MAX(Z_RUN_SEQ_ID) INTO LV_MAX_NEW_SEQ_ID FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKPP";
	
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = LV_PYMNT_PLAN_1_ICON, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEW_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_PYMNT_PLAN_1)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_PYMNT_PLAN_1_GRP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = LV_PYMNT_PLAN_2_ICON, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEW_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_PYMNT_PLAN_2)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_PYMNT_PLAN_2_GRP);
END