PROCEDURE "procedures.events.erp::PR_EXTRACT_AB_DOC_PAYMENT_EVENT" (
	IN IV_MODE INTEGER DEFAULT 0
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
    AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   /*PAYMENT GROUP*/
	/*Create view with rowcounts per opbel */
	
	DECLARE LV_AB_PYMNT_1 CONSTANT NVARCHAR(500) := 'AB Document Cleared Fully';
	DECLARE LV_AB_PYMNT_2 CONSTANT NVARCHAR(500) := 'AB Document Cleared Partially';
	DECLARE LV_AB_PYMNT_3 CONSTANT  NVARCHAR(500) := 'Occured Late Payment Interest' ;
	DECLARE LV_AB_EVENT_GRP CONSTANT NVARCHAR(500) := 'Payment';
	DECLARE LV_AB_EVENT_ICON CONSTANT NVARCHAR(500) := 'document-text';
	
	DECLARE LV_EVENT_ID INTEGER;
	DECLARE LV_EVENT_GROUP NVARCHAR(500);
	
	DECLARE LV_MAX_LASTSEQ_ID_CL_F INTEGER;
	DECLARE LV_MAX_LASTSEQ_ID_CL_P INTEGER;
	DECLARE LV_MAX_LASTSEQ_ID_LP_I INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_CL_F INTEGER;
	DECLARE LV_EVENT_ID_CL_F INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_CL_P INTEGER;
	DECLARE LV_EVENT_ID_CL_P INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_LP_I INTEGER;
	DECLARE LV_EVENT_ID_LP_I INTEGER;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_AB_PYMNT_1);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_AB_PYMNT_2);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_AB_PYMNT_3);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_LASTSEQ_ID_CL_F from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_AB_PYMNT_1);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_LASTSEQ_ID_CL_P from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_AB_PYMNT_2);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_LASTSEQ_ID_LP_I from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_AB_PYMNT_3);
	--LV_MAX_SEQ_ID = SELECT OUT_MAX_SEQ_ID from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_CHRG_REG_DUNN);

	LT_CUST_EDITED_CL_F = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_MAX_LASTSEQ_ID_CL_F;
	LT_CUST_ID_EDITED_CL_F = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_CL_F;
	
	LT_CUST_EDITED_CL_P = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_MAX_LASTSEQ_ID_CL_P;
	LT_CUST_ID_EDITED_CL_P = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_CL_P;
	
	LT_CUST_EDITED_LP_I = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_MAX_LASTSEQ_ID_LP_I;
	LT_CUST_ID_EDITED_LP_I = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_LP_I;
	--Delete the events from Customer Events table
	--delete from "db::app.CustomerEvents" where CUST_ID in (LT_CUST_ID_EDITED) and EVENT_ID = (SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_CHRG_REG_DUNN));
    CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_AB_PYMNT_1,
		IT_CUST=>:LT_CUST_ID_EDITED_CL_F
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_AB_PYMNT_2,
		IT_CUST=>:LT_CUST_ID_EDITED_CL_P
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_AB_PYMNT_3,
		IT_CUST=>:LT_CUST_ID_EDITED_LP_I
   );
   LT_CUST_ID = SELECT GPART FROM :LT_CUST_EDITED_CL_F UNION SELECT GPART FROM :LT_CUST_EDITED_CL_P UNION SELECT GPART FROM :LT_CUST_EDITED_LP_I;
   	TEMP_DFKKOP =
	 SELECT OPBEL,BLART,KOFIZ,CLEARED_DATE , AUGDT, AUGVD, HVORG,GPART, TVORG,PAYMENT_DATE,ROW_NUMBER() OVER(PARTITION BY OPBEL ORDER BY CLEARED_DATE ASC) AS RN   FROM (
			SELECT OPBEL,BLART,KOFIZ , AUGDT, AUGVD, HVORG, TVORG,GPART,PAYMENT_DATE,
			CASE WHEN CLEARING_DATE = '' OR CLEARING_DATE = NULL OR CLEARING_DATE = '00000000' THEN '99991231'
			ELSE CLEARING_DATE END AS CLEARED_DATE
			from (
				SELECT A8.*,COALESCE(PAYMENT_DATE, case when A8.AUGVD = '00000000' OR  A8.AUGVD = '' OR A8.AUGVD = NULL then NULL ELSE A8.AUGVD END, A8.AUGDT) AS CLEARING_DATE, PAYMENT_DATE
			     FROM	
				(SELECT *
					FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP"
					WHERE KOFIZ = 'LT'
					AND BLART = 'AB'
					AND HVORG = '4000'
					AND (TVORG IN ('0150', '0190'))
					AND (AUGRD IN ('01', '08', '15', ''))) A8 left join
						(SELECT AUGBL, MAX(FAEDN) AS PAYMENT_DATE FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" A6 
								   WHERE AUGBL IN (SELECT AUGBL from  "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" WHERE AUGBL != '' AND GPART IN (SELECT GPART FROM :LT_CUST_ID))
									AND A6.HVORG = '5000' GROUP BY AUGBL ) B8 
									ON A8.AUGBL = B8.AUGBL  ));
			
		/*Final payment for AB*/
		/*Check if last item has been cleared*/	
	   -- SELECT EVENT_ID INTO LV_EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_1);
	--	SELECT EVENT_GROUP INTO LV_EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_1);
		INSERT INTO "db::app.CustomerEvents"
		SELECT SAP.CUST_ID AS CUST_ID, 
			NULL AS EVENT_ID,
			:LV_AB_EVENT_GRP as EVENT_GROUP,
			:LV_AB_PYMNT_1 AS EVENT_NAME, 
			CAST(AUGDT as timestamp) AS INIT_DATE, 
			NULL AS END_DATE, 
			1 AS EVENT_VALUE, 
			:LV_AB_PYMNT_1 AS DESCRIPTION, 
			concat(year(AUGDT), lpad(month(AUGDT), 2, 0)
			) AS INIT_TS, 
			NULL AS END_TS
		FROM :TEMP_DFKKOP AS TEMP
			INNER JOIN (
				SELECT OPBEL, 
					MAX(RN) AS MAXRN
				FROM :TEMP_DFKKOP
				GROUP BY OPBEL
			) AS t
			ON t.OPBEL = TEMP.OPBEL
				AND t.MAXRN = TEMP.RN
			INNER JOIN "db::app.Customer" AS SAP
			ON SAP.EXT_ID = TEMP.GPART
		WHERE AUGDT != '1900-01-01'
			AND AUGDT > 0
			AND KOFIZ = 'LT'
			AND BLART = 'AB'
			AND HVORG = '4000'
			AND (TVORG IN ('0150', '0190'));
	

		/*Partial payment for AB*/
		/*Check if any item before the last item has been cleared*/
		--SELECT EVENT_ID INTO LV_EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_2);
		--SELECT EVENT_GROUP INTO LV_EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_2);
		INSERT INTO "db::app.CustomerEvents"
		SELECT SAP.CUST_ID AS CUST_ID, 
			NULL as EVENT_ID,
			:LV_AB_EVENT_GRP as EVENT_GROUP,
			:LV_AB_PYMNT_2 AS EVENT_NAME, 
			CAST(AUGDT as timestamp) AS INIT_DATE, 
			NULL AS END_DATE, 
			1 AS EVENT_VALUE, 
			:LV_AB_PYMNT_2 AS DESCRIPTION, 
			concat(
				year(AUGDT), 
				lpad(
					month(AUGDT), 
					2, 
					0
				)
			) AS INIT_TS, 
			NULL AS END_TS
		FROM :TEMP_DFKKOP TEMP
			INNER JOIN (
				SELECT OPBEL, 
					MAX(RN) AS MAXRN
				FROM :TEMP_DFKKOP
				GROUP BY OPBEL
			) AS t
			ON t.OPBEL = TEMP.OPBEL
				AND t.MAXRN > TEMP.RN
			INNER JOIN "db::app.Customer" AS SAP
			ON SAP.EXT_ID = TEMP.GPART
		WHERE AUGDT != '1900-01-01'
			AND AUGDT > 0
			AND KOFIZ = 'LT'
			AND BLART = 'AB'
			AND HVORG = '4000'
			AND (TVORG IN ('0150', '0190'));
			
	
		
		/*Late interest payments*/
		/*Look for LPI. Must not be remitted*/
	--	SELECT EVENT_ID  INTO LV_EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_3);
	--	SELECT EVENT_GROUP  INTO LV_EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_3);
		INSERT INTO "db::app.CustomerEvents"
		SELECT SAP.CUST_ID AS CUST_ID, 
			NULL AS EVENT_ID,
			:LV_AB_EVENT_GRP AS EVENT_GROUP,
			:LV_AB_PYMNT_3 AS EVENT_NAME, 
			CAST(FAEDN AS timestamp) AS INIT_DATE, 
			NULL AS END_DATE, 
			1 AS EVENT_VALUE, 
			:LV_AB_PYMNT_3 AS DESCRIPTION, 
			concat(
				year(FAEDN), 
				lpad(
					month(FAEDN), 
					2, 
					0
				)
			) AS INIT_TS, 
			NULL AS END_TS
		FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" AS A
			INNER JOIN "db::app.Customer" AS SAP
			ON SAP.EXT_ID = A.GPART
		WHERE HVORG = '0040' AND KOFIZ ='LT'
			AND (AUGRD NOT IN ('4', '14', '5', '99'))
			;
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_CL_F from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_CL_P from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_LP_I from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
/*	SELECT EVENT_ID INTO LV_EVENT_ID_CL_F FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_1);
	CALL "procedures.utils::PR_UPDATE_SEQ_ID_FOR_EVENTS"(
		SEQ_ID=> :LV_MAX_NEWSEQ_ID_CL_F,
		EVENT_ID=>:LV_EVENT_ID_CL_F
	);
	
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_CL_P from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	SELECT EVENT_ID INTO LV_EVENT_ID_CL_P FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_2);
	CALL "procedures.utils::PR_UPDATE_SEQ_ID_FOR_EVENTS"(
		SEQ_ID=> :LV_MAX_NEWSEQ_ID_CL_P,
		EVENT_ID=>:LV_EVENT_ID_CL_P
	);
	
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_LP_I from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	SELECT EVENT_ID INTO LV_EVENT_ID_LP_I FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_AB_PYMNT_3);
	CALL "procedures.utils::PR_UPDATE_SEQ_ID_FOR_EVENTS"(
		SEQ_ID=> :LV_MAX_NEWSEQ_ID_LP_I,
		EVENT_ID=>:LV_EVENT_ID_LP_I
	);
	*/
   	-- Generate Event IDs for newly created Events
	CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"();
	
		UPDATE "db::adm.config.event.name" 
		SET "ICON" = LV_AB_EVENT_ICON, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_CL_F, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_AB_PYMNT_1)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_AB_EVENT_GRP);
		
		UPDATE "db::adm.config.event.name" 
		SET "ICON" = LV_AB_EVENT_ICON, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_CL_P, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_AB_PYMNT_2)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_AB_EVENT_GRP);
		
		UPDATE "db::adm.config.event.name" 
		SET "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_LP_I, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_AB_PYMNT_3)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_AB_EVENT_GRP);
END