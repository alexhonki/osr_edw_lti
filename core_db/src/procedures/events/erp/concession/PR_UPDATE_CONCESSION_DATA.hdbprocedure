PROCEDURE "procedures.events.erp.concession::PR_UPDATE_CONCESSION_DATA" ( )
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN
	/*************************************
	DFKKOP - Item table for Contract Account Document
		KOFIZ - Account Determination ID - ('LT' for LandTax)
		BETRH - Net Due Amount
		HVORG - Main Transaction for Line Item ('4050'  Sundry Court Costs)
		AUGBT - Clearing amount in clearing currency 
		TVORGV- Sub Transaction ( 0525 - Charge Registration Fees)
		AUGRD - Clearing Reason(04 - Write-Off, 14 - Mass Write-Off, 05 - Reversal, 99 - Mass process)
		
		Check whether Registration Fee was charged to a Customer or not for Main transaction as 4050
	*************************************/
	DECLARE LV_DEBT_REC_CON_HOME NVARCHAR(500) := 'Received Exemption For Home' ;
	DECLARE LV_DEBT_REC_CON_PROD NVARCHAR(500) := 'Received Exemption For Primary Production';
	DECLARE LV_DEBT_REC_CON_OTH NVARCHAR(500)  := 'Received Exemption For Other Exemption';
	DECLARE LV_DEBT_REC_CON_SUBD NVARCHAR(500) := 'Received Exemption For Subdivider Discount';
	DECLARE LV_DEBT_REM_CON_HOME NVARCHAR(500) := 'Removed Exemption For Home';
	DECLARE LV_DEBT_REM_CON_PROD NVARCHAR(500) := 'Removed Exemption For Primary Production';
	DECLARE LV_DEBT_REM_CON_OTH NVARCHAR(500)  := 'Removed Exemption For Other Exemption';
	DECLARE LV_DEBT_REM_CON_SUBD NVARCHAR(500) := 'Removed Exemption For Subdivider Discount';
	DECLARE LV_EVENT_GRP NVARCHAR(500) := 'Exemption';
	
	DECLARE LV_MAX_NEWSEQ_ID_REC_CON_HOME INTEGER;
	DECLARE LV_EVENT_ID_REC_CON_HOME INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_REC_CON_PROD INTEGER;
	DECLARE LV_EVENT_ID_REC_CON_PROD INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_REC_CON_OTH INTEGER;
	DECLARE LV_EVENT_ID_REC_CON_OTH INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_REC_CON_SUBD INTEGER;
	DECLARE LV_EVENT_ID_REC_CON_SUBD INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_REM_CON_HOME INTEGER;
	DECLARE LV_EVENT_ID_REM_CON_HOME INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_REM_CON_PROD INTEGER;
	DECLARE LV_EVENT_ID_REM_CON_PROD INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_REM_CON_OTH INTEGER;
	DECLARE LV_EVENT_ID_REM_CON_OTH INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_REM_CON_SUBD INTEGER;
	DECLARE LV_EVENT_ID_REM_CON_SUBD INTEGER;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
	
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REC_CON_HOME from "osr.edw.staging.md.rms.proxy.synonym::CV_LTCNEXMD";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REC_CON_PROD from "osr.edw.staging.md.rms.proxy.synonym::CV_LTCNEXMD";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REC_CON_OTH from "osr.edw.staging.md.rms.proxy.synonym::CV_LTCNEXMD";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REC_CON_SUBD from "osr.edw.staging.td.rms.proxy.synonym::CV_LTCNRESV";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REM_CON_HOME from "osr.edw.staging.md.rms.proxy.synonym::CV_LTCNEXMD";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REM_CON_PROD from "osr.edw.staging.md.rms.proxy.synonym::CV_LTCNEXMD";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REM_CON_OTH from "osr.edw.staging.md.rms.proxy.synonym::CV_LTCNEXMD";
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_REM_CON_SUBD from "osr.edw.staging.td.rms.proxy.synonym::CV_LTCNRESV";

	-- Generate Event IDs for newly created Events
	CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'ERP', I_TYPE => 3);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REC_CON_HOME, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REC_CON_HOME)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REC_CON_PROD, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REC_CON_PROD)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REC_CON_OTH, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REC_CON_OTH)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REC_CON_SUBD, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REC_CON_SUBD)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REM_CON_HOME, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REM_CON_HOME)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REM_CON_PROD, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REM_CON_PROD)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REM_CON_OTH, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REM_CON_OTH)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
	
	UPDATE "db::adm.config.event.name" 
		SET "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_NEWSEQ_ID_REM_CON_SUBD, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_DEBT_REM_CON_SUBD)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP);
END