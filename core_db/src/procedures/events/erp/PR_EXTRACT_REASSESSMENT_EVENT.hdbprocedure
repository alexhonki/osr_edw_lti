PROCEDURE "procedures.events.erp::PR_EXTRACT_REASSESSMENT_EVENT" (
	IN IV_MODE INTEGER DEFAULT 0
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   DECLARE LV_REASSESS_ORG_1 CONSTANT NVARCHAR(500) := 'Re-Assessment Posted - ORG - TAXABLE VALUE UNDER $350,000';
   DECLARE LV_REASSESS_ORG_2 CONSTANT NVARCHAR(500) := 'Re-Assessment Posted - ORG - TAXABLE VALUE $350,000 - $2,249,999';
   DECLARE LV_REASSESS_ORG_3 CONSTANT NVARCHAR(500) := 'Re-Assessment Posted - ORG - TAXABLE VALUE $2,250,000 - $4,999,999' ;
   DECLARE LV_REASSESS_ORG_4 CONSTANT NVARCHAR(500) := 'Re-Assessment Posted - ORG - TAXABLE VALUE $5,000,000 AND OVER';
    
 
   /*DECLARE LV_REASSESS_IND_1 NVARCHAR(500) := 'Re-Assessment Posted - IND - TAXABLE VALUE UNDER $600,000';
   DECLARE LV_REASSESS_IND_2 NVARCHAR(500) := 'Re-Assessment Posted - IND - TAXABLE VALUE $600,000 - $999,999';
   DECLARE LV_REASSESS_IND_3 NVARCHAR(500) := 'Re-Assessment Posted - IND - TAXABLE VALUE $1,000,000 - $2,999,999' ;
   DECLARE LV_REASSESS_IND_4 NVARCHAR(500) := 'Re-Assessment Posted - IND - TAXABLE VALUE $3,000,000 - $4,999,999';
   DECLARE LV_REASSESS_IND_5 NVARCHAR(500) := 'Re-Assessment Posted - IND - TAXABLE VALUE $5,000,000 AND OVER';
   
	DECLARE LV_MAX_SEQ_ID INTEGER;
	DECLARE LV_NEW_MAX_SEQ_ID INTEGER;
	DECLARE LV_GROUP NVARCHAR(500) := 'Reassessment';
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
 
  	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_ORG_1);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_ORG_2);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_ORG_3);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_ORG_4);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_IND_1);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_IND_2);
  	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_IND_3);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_IND_4);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REASSESS_IND_5);
	
	SELECT OUT_MAX_SEQ_ID into LV_MAX_SEQ_ID from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_REASSESS_ORG_1);
	IF :LV_MAX_SEQ_ID IS NULL THEN 
		LV_MAX_SEQ_ID = 0;
	END IF;
	
	LT_CUST_EDITED_REASSESS_ALL = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_MAX_SEQ_ID;
	LT_CUST_ID_EDITED_REASSESS_ALL = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_REASSESS_ALL;
	
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_ORG_1,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_ORG_2,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_ORG_3,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_ORG_4,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_IND_1,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_IND_2,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_IND_3,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_IND_4,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REASSESS_IND_5,
		IT_CUST=>:LT_CUST_ID_EDITED_REASSESS_ALL
   );
   LT_CUST_ID = SELECT DISTINCT GPART FROM :LT_CUST_EDITED_REASSESS_ALL;
   INSERT INTO "db::app.CustomerEvents" 
   SELECT SAP.CUST_ID,
		null as EVENT_ID,
			:LV_GROUP EVENT_GROUP,
			CASE WHEN B.TAXVALUE < 350000 THEN :LV_REASSESS_ORG_1
				 WHEN B.TAXVALUE >= 350000 AND B.TAXVALUE <= 2249999 THEN :LV_REASSESS_ORG_2
			  	 WHEN B.TAXVALUE >= 2250000 AND B.TAXVALUE <= 4999999 THEN :LV_REASSESS_ORG_3
				 WHEN B.TAXVALUE >= 5000000 THEN :LV_REASSESS_ORG_4
			END as EVENT_NAME,
			CAST(A.BUDAT as date) as INIT_DATE,
			NULL as END_DATE,
			1 as EVENT_VALUE, 
			CASE WHEN B.TAXVALUE < 350000 THEN :LV_REASSESS_ORG_1
				 WHEN B.TAXVALUE >= 350000 AND B.TAXVALUE <= 2249999 THEN :LV_REASSESS_ORG_2
			  	 WHEN B.TAXVALUE >= 2250000 AND B.TAXVALUE <= 4999999 THEN :LV_REASSESS_ORG_3
				 WHEN B.TAXVALUE >= 5000000 THEN :LV_REASSESS_ORG_4
			END  as DESCRIPTION,
			LEFT(BUDAT,6)  as INIT_TS,
			NULL  as END_TS
		FROM (
					SELECT a.GPART as GPART, 
					BUDAT, 
					TO_INT(PERSL - 1) AS YEAR, 
					SUM(BETRH) AS TAXAMOUNT
				FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" as a
				INNER JOIN :LT_CUST_ID as delt ON a.GPART = delt.GPART
				WHERE HVORG = '4000'
					AND TVORG in ('0150', '0190')
					AND KOFIZ = 'LT'
					AND BETRH > 0
					AND (AUGRD IN ('01', '08', '15', ''))
					AND PERSL > '2010'
				GROUP BY a.GPART, 
					BUDAT, 
					PERSL, 
					FBNUM
			) AS A
			INNER JOIN (
						SELECT ZZ_PARTNER, 
					TAXYRSTARTDT, 
					CHDATE, 
					TO_BIGINT(MAX(TOTBPTAXABLEVAL)) AS TAXVALUE, 
					MAX(TAXAMOUNT) AS TOTAL_TAX
				FROM "osr.edw.staging.td.rms.proxy.synonym::CV_LTCNRESV"
				WHERE INDIVORG ='ORG'
				GROUP BY ZZ_PARTNER, 
					TAXYRSTARTDT, 
					CHDATE
			) AS B
			ON A.GPART = B.ZZ_PARTNER
				AND A.YEAR = YEAR(B.TAXYRSTARTDT)
			INNER JOIN "db::app.Customer" AS SAP
			ON SAP.EXT_ID = A.GPART
			
			UNION ALL
    
			SELECT SAP.CUST_ID,
			null as EVENT_ID,
			:LV_GROUP as EVENT_GROUP,
			CASE WHEN B.TAXVALUE < 600000 THEN :LV_REASSESS_IND_1
				 WHEN B.TAXVALUE >= 600000 AND B.TAXVALUE <= 999999 THEN :LV_REASSESS_IND_2
			  	 WHEN B.TAXVALUE >= 1000000 AND B.TAXVALUE <= 2999999 THEN :LV_REASSESS_IND_3
			  	 WHEN B.TAXVALUE >= 3000000 AND B.TAXVALUE <= 4999999 THEN :LV_REASSESS_IND_4
				 WHEN B.TAXVALUE >= 5000000 THEN :LV_REASSESS_IND_5
			END as EVENT_NAME,
			CAST(A.BUDAT as date) as INIT_DATE,
			NULL as END_DATE,
			1 as EVENT_VALUE, 
			CASE WHEN B.TAXVALUE < 600000 THEN :LV_REASSESS_IND_1
				 WHEN B.TAXVALUE >= 600000 AND B.TAXVALUE <= 999999 THEN :LV_REASSESS_IND_2
			  	 WHEN B.TAXVALUE >= 1000000 AND B.TAXVALUE <= 2999999 THEN :LV_REASSESS_IND_3
			  	 WHEN B.TAXVALUE >= 3000000 AND B.TAXVALUE <= 4999999 THEN :LV_REASSESS_IND_4
				 WHEN B.TAXVALUE >= 5000000 THEN :LV_REASSESS_IND_5
			END  as DESCRIPTION,
			LEFT(BUDAT,6)  as INIT_TS,
			NULL  as END_TS
		FROM (
					SELECT a.GPART as GPART, 
					BUDAT, 
					TO_INT(PERSL - 1) AS YEAR, 
					SUM(BETRH) AS TAXAMOUNT
				FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" as a
				INNER JOIN :LT_CUST_ID as delt ON a.GPART = delt.GPART
				WHERE HVORG = '4000'
					AND TVORG in ('0150', '0190')
					AND KOFIZ = 'LT'
					AND BETRH > 0
					AND (AUGRD IN ('01', '08', '15', ''))
					AND PERSL > '2010'
				GROUP BY a.GPART, 
					BUDAT, 
					PERSL, 
					FBNUM
			) AS A
			INNER JOIN (
						SELECT ZZ_PARTNER, 
					TAXYRSTARTDT, 
					CHDATE, 
					TO_BIGINT(MAX(TOTBPTAXABLEVAL)) AS TAXVALUE, 
					MAX(TAXAMOUNT) AS TOTAL_TAX
				FROM "osr.edw.staging.td.rms.proxy.synonym::CV_LTCNRESV"
				WHERE INDIVORG ='IND'
				GROUP BY ZZ_PARTNER, 
					TAXYRSTARTDT, 
					CHDATE
			) AS B
			ON A.GPART = B.ZZ_PARTNER
				AND A.YEAR = YEAR(B.TAXYRSTARTDT)
			INNER JOIN "db::app.Customer" AS SAP
			ON SAP.EXT_ID = A.GPART;

	-- Generate event ID
    CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'ERP', I_TYPE => 3);	
	
	SELECT MAX(Z_RUN_SEQ_ID) INTO LV_NEW_MAX_SEQ_ID FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_ORG_1)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);

	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_ORG_2)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_ORG_3)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_ORG_4)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_IND_1)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_IND_2)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_IND_3)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_IND_4)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);
		
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = NULL, "PRIORITY" = 1, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REASSESS_IND_5)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_GROUP);*/
END