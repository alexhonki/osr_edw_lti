PROCEDURE "procedures.events.erp::PR_EXTRACT_REISSUE_EVENT" (
	IN IV_MODE INTEGER DEFAULT 0
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
  /*************************************
       Get the events for RE-ISSUE
       /OSRQLD/LTAXASFB - Table for Land Tax Assessment Form Bundle number
    	  ASSESS_FBNUM - Assessment Payment Reference Code
    	  REISSUE_DATE - Latest Reissue Date
       DFKKOP - Item table for Contract Account Document
    	  FBNUM - FormB. Number
    	
    == Left Join with DFKKOP only helps in fetching GPART which further has Inner Join with app.Customer to only get the results for Active Taxpayers
   *************************************/
   
   	DECLARE LV_REISSUE CONSTANT NVARCHAR(500) := 'Reissue Assessment';
   	DECLARE LV_REISSUE_GROUP CONSTANT NVARCHAR(500) := 'Reissue';
   	DECLARE LV_EVENT_ICON CONSTANT NVARCHAR(500) := 'sys-first-page';
   	DECLARE LV_MAX_SEQ_ID INTEGER;
   	DECLARE LV_NEW_MAX_SEQ_ID INTEGER;
   	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
		
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_REISSUE);
	SELECT OUT_MAX_SEQ_ID INTO LV_MAX_SEQ_ID FROM "functions::TF_GET_MAX_SEQID_EVENT"(:LV_REISSUE);
	IF  :LV_MAX_SEQ_ID IS NULL THEN 
		LV_MAX_SEQ_ID = 0;
	END IF;
	
	LT_CUST_EDITED_REISSUE = SELECT DISTINCT b.GPART as CUST_ID, a.REISSUE_DATE FROM "osr.edw.staging.td.rms.proxy.synonym::CV_LTAXASFB" a 
																		LEFT JOIN "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" b ON b.FBNUM=a.ASSESS_FBNUM
																		INNER JOIN "db::app.Customer" c ON c.EXT_ID = b.GPART
																		WHERE a.REISSUE_DATE>0 AND a.Z_RUN_SEQ_ID > LV_MAX_SEQ_ID ;
																		
	LT_CUST_ID_EDITED_REISSUE = SELECT CUST_ID from :LT_CUST_EDITED_REISSUE;
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_REISSUE,
		IT_CUST=>:LT_CUST_EDITED_REISSUE
	);
   	INSERT INTO "db::app.CustomerEvents"
		SELECT 
			c.CUST_ID AS CUST_ID,
			NULL AS EVENT_ID,
			:LV_REISSUE_GROUP AS EVENT_GROUP,
			:LV_REISSUE AS EVENT_NAME,
			CAST(MAX(a.REISSUE_DATE) AS date) AS INIT_DATE,
			NULL AS END_DATE,
			1 AS EVENT_VALUE,
			CONCAT(CONCAT(:LV_REISSUE,' - '), ASSESS_FBNUM) AS DESCRIPTION,
			LEFT(MAX(a.REISSUE_DATE),6)  AS INIT_TS,
			NULL AS END_TS
		FROM "osr.edw.staging.td.rms.proxy.synonym::CV_LTAXASFB" a 
			LEFT JOIN "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" b ON b.FBNUM=a.ASSESS_FBNUM
			INNER JOIN "db::app.Customer" c ON c.EXT_ID = b.GPART
			INNER JOIN :LT_CUST_EDITED_REISSUE delt ON b.GPART = delt.CUST_ID
			WHERE a.REISSUE_DATE>0 GROUP BY c.CUST_ID, ASSESS_FBNUM;

	-- Generate event ID
    CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'ERP', I_TYPE => 3);	
	
	SELECT MAX(Z_RUN_SEQ_ID) INTO LV_NEW_MAX_SEQ_ID FROM "osr.edw.staging.td.rms.proxy.synonym::CV_LTAXASFB";
	
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = LV_EVENT_ICON, "PRIORITY" = 30, DESCRIPTION = LV_REISSUE, "LATEST_EXTRACTED_SEQUENCE" = LV_NEW_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_REISSUE)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_REISSUE_GROUP);
END
