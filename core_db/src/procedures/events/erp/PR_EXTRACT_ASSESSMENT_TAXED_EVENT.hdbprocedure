PROCEDURE "procedures.events.erp::PR_EXTRACT_ASSESSMENT_TAXED_EVENT" ( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
  /*************************************
       Get the events for Taxed -  One year or multiyear
   *************************************/
   
	DECLARE LV_TAX_MUL NVARCHAR(500) := 'Taxed - Multiyear';
	DECLARE LV_TAX_ONE NVARCHAR(500) := 'Taxed - One year';
   	
   	DECLARE LV_MAX_LASTSEQ_ID_TMY INTEGER;
	DECLARE LV_MAX_LASTSEQ_ID_TOY INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_TMY INTEGER;
	DECLARE LV_EVENT_ID_TMY INTEGER;
	
	DECLARE LV_MAX_NEWSEQ_ID_TOY INTEGER;
	DECLARE LV_EVENT_ID_TOY INTEGER;
   	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
	SELECT OUT_MAX_SEQ_ID into LV_MAX_LASTSEQ_ID_TMY from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_TAX_MUL);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_LASTSEQ_ID_TOY from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_TAX_ONE);
	LT_CUST_EDITED_TMY = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_MAX_LASTSEQ_ID_TMY;
	LT_CUST_ID_EDITED_TMY = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_TMY;
	
	LT_CUST_EDITED_TOY = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_MAX_LASTSEQ_ID_TOY;
	LT_CUST_ID_EDITED_TOY = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED_TOY;
	
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_TAX_MUL,
		IT_CUST=>:LT_CUST_ID_EDITED_TMY
   );
   CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_TAX_ONE,
		IT_CUST=>:LT_CUST_ID_EDITED_TOY
   );
   LT_CUST_ID = SELECT GPART FROM :LT_CUST_EDITED_TMY UNION SELECT GPART FROM :LT_CUST_EDITED_TOY;
   	INSERT INTO "db::app.CustomerEvents"
	select
	c.CUST_ID as CUST_ID,
	CASE
		WHEN EVENT_VALUE = 1 THEN (SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_TAX_ONE))
		WHEN EVENT_VALUE > 1 THEN (SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_TAX_MUL))
	END as EVENT_ID,
	CASE
		WHEN EVENT_VALUE = 1 THEN (SELECT EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_TAX_ONE))
		WHEN EVENT_VALUE > 1 THEN (SELECT EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_TAX_MUL))
	END as EVENT_GROUP,
	CASE
		WHEN EVENT_VALUE = 1 THEN :LV_TAX_ONE
		WHEN EVENT_VALUE > 1 THEN :LV_TAX_MUL
	END as EVENT_NAME,
	to_date(BUDAT,'YYYYMMDD') as INIT_DATE,
	to_date(BUDAT,'YYYYMMDD') as END_DATE,
	EVENT_VALUE,
	CASE
		WHEN EVENT_VALUE = 1 THEN :LV_TAX_ONE
		WHEN EVENT_VALUE > 1 THEN :LV_TAX_MUL
	END as DESCRIPTION,
	LEFT(BUDAT,6) as INIT_TS,
	LEFT(BUDAT,6)  as END_TS
	from 
	(SELECT GPART,BUDAT,count(distinct FBNUM) as EVENT_VALUE FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP"
	WHERE KOFIZ='LT' and BLART='AB' and HVORG='4000' and TVORG='0150' AND GPART IN (SELECT GPART FROM :LT_CUST_ID)
	GROUP BY GPART,BUDAT) as b
	INNER JOIN "db::app.Customer" c on c.EXT_ID = b.GPART;
	
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_TMY from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	SELECT EVENT_ID INTO LV_EVENT_ID_TMY FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_TAX_MUL);
	CALL "procedures.utils::PR_UPDATE_SEQ_ID_FOR_EVENTS"(
		SEQ_ID=> :LV_MAX_NEWSEQ_ID_TMY,
		EVENT_ID=>:LV_EVENT_ID_TMY
	);
	
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_NEWSEQ_ID_TOY from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	SELECT EVENT_ID INTO LV_EVENT_ID_TOY FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_TAX_ONE);
	CALL "procedures.utils::PR_UPDATE_SEQ_ID_FOR_EVENTS"(
		SEQ_ID=> :LV_MAX_NEWSEQ_ID_TOY,
		EVENT_ID=>:LV_EVENT_ID_TOY
	);
END