PROCEDURE "procedures.events.erp::PR_EXTRACT_DEBT_MANAGEMENT_EVENT" 
( 	IN IV_MODE INTEGER DEFAULT 0 )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
    AS
BEGIN
   /*************************************
    FKKMAKO - Dunning History Header
    	AUSDT - Date of issue
    	STRAT - Coll. Strategy (02 - Land Tax)
    	STEP  - Collection Step 
    		P001 - Final Demand
    		P004 - Legal Letter
    		P005 - Part Payment Letter
    		P006 - Land Tax - Client Letter Section 24
    		P06A - Land Tax-Search and Update Data for Section 24 Ltr
    		P007 - Land Tax - Mortgagee Letter
    		P07A - Mortgagee Final Demand
    		P008 - Phone Call - Pending Legal Proceedings
    		P010 - Refer for Credit Listing $100 - $500
    		P011 - Land Tax - Charge Registration
    		
    Check if any of the Collection Step mentioned above has data in FKKMAKO table. If yes, Generate Event for that Step		
    		
   *************************************/
   
   DECLARE LV_EVENT_GRP CONSTANT NVARCHAR(500) := 'Debt Management';
   DECLARE LV_EVENT_ICON CONSTANT NVARCHAR(500) := 'sales-order';
   DECLARE LV_EVENT_MAX_ID INTEGER;
   DECLARE LV_EVENT_NEW_MAX_ID INTEGER;
   --DECLARE LT_CUST_ID TABLE (GPART NVARCHAR(10));
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
	IF IV_MODE = 0 THEN 
		DELETE FROM "db::app.CustomerEvents" where EVENT_NAME IN (SELECT EVENT_NAME FROM "db::adm.config.event.name" WHERE  UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP) 
		AND "SOURCE" = 'ERP');
		UPDATE "db::adm.config.event.name" SET LATEST_EXTRACTED_SEQUENCE = 0 where CATEGORY_NAME = :LV_EVENT_GRP AND "SOURCE" = 'ERP';
	END IF;
	SELECT MAX(LATEST_EXTRACTED_SEQUENCE) into LV_EVENT_MAX_ID from "db::adm.config.event.name" where CATEGORY_NAME = :LV_EVENT_GRP AND "SOURCE" = 'ERP';
	IF :LV_EVENT_MAX_ID IS NULL THEN 
		SELECT 0 INTO LV_EVENT_MAX_ID FROM "synonyms::dummy";
	END IF;
	LT_CUST_EDITED = SELECT DISTINCT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_FKKMAKO"  inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_EVENT_MAX_ID  ;
	LT_CUST_ID_EDITED = select distinct GPART from :LT_CUST_EDITED;
	delete from "db::app.CustomerEvents" where (CUST_ID, "EVENT_GROUP") in (select CUST_ID, :LV_EVENT_GRP FROM :LT_CUST_EDITED);
  
    INSERT INTO "db::app.CustomerEvents"
  /*LTAX Dunning*/ 
   
	SELECT SAP.CUST_ID AS CUST_ID, 
			--(SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_DEBT_FNL_DMD)) AS EVENT_ID,
			--(SELECT EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_DEBT_FNL_DMD)) AS EVENT_GROUP,
			NULL AS  EVENT_ID,
			:LV_EVENT_GRP AS EVENT_GROUP,
			CONCAT('Progressed ', STEPT) AS EVENT_NAME, 
			CAST(AUSDT AS date) AS INIT_DATE, 
			NULL AS END_DATE, 
			1 AS EVENT_VALUE, 
			CONCAT('Progressed ', STEPT) AS DESCRIPTION, 
			concat(
				YEAR(AUSDT), 
				LPAD(
					MONTH(AUSDT), 
					2, 
					0
				)
			) AS INIT_TS, 
			NULL AS END_TS
		FROM "osr.edw.staging.td.rms.proxy.synonym::CV_FKKMAKO" AS a
			INNER JOIN "osr.edw.source.md.rms.proxy.synonym::CV_TFK047UT" AS c
			on a.STEP = c.STEP
			INNER JOIN "db::app.Customer" AS SAP
			ON SAP.EXT_ID = a.GPART
			INNER JOIN :LT_CUST_ID_EDITED b
			ON SAP.EXT_ID = b.GPART
		WHERE VKONTGRP = '/LT';

	CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'ERP', I_TYPE => 3);	
    
	select max(Z_RUN_SEQ_ID) INTO LV_EVENT_NEW_MAX_ID FROM "osr.edw.staging.td.rms.proxy.synonym::CV_FKKMAKO";
	
	UPDATE "db::adm.config.event.name" 
		SET "ICON" = LV_EVENT_ICON, "PRIORITY" = 40, "LATEST_EXTRACTED_SEQUENCE" = LV_EVENT_NEW_MAX_ID,"LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE  UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GRP) 
		AND "SOURCE" = 'ERP';
   
END