PROCEDURE "procedures.events.erp::PR_EXTRACT_DUNNING_EVENT" 
( 	IN IV_MODE INTEGER DEFAULT 0 )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
    AS
BEGIN
   /*************************************
    DFKKOP - Item table for Contract Account Document
		KOFIZ - Account Determination ID - ('LT' for LandTax)
		BETRH - Net Due Amount
		HVORG - Main Transaction for Line Item ('4050'  Sundry Court Costs)
		AUGBT - Clearing amount in clearing currency 
		TVORGV- Sub Transaction ( 0525 - Charge Registration Fees)
		AUGRD - Clearing Reason(04 - Write-Off, 14 - Mass Write-Off, 05 - Reversal, 99 - Mass process)
		
		Check whether Registration Fee was charged to a Customer or not for Main transaction as 4050
   *************************************/
    DECLARE LV_CHRG_REG_DUNN NVARCHAR(500) := 'Charge Registration' ;
     DECLARE LV_ASSESS_EVENT_GRP NVARCHAR(500) := 'Assessment';
     DECLARE LV_ICON NVARCHAR(500) := 'unpaid-leave';
    DECLARE LV_TEST INTEGER;
     DECLARE LV_MAX_SEQ_ID INTEGER;
      DECLARE LV_MAX_EVENT_ID INTEGER;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_CHRG_REG_DUNN);
	SELECT OUT_MAX_SEQ_ID into lv_test from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_CHRG_REG_DUNN);
	IF :lv_test IS NULL THEN
	lv_test = 0;
	END IF;
	--LV_MAX_SEQ_ID = SELECT OUT_MAX_SEQ_ID from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_CHRG_REG_DUNN);
	LT_CUST_EDITED = SELECT GPART FROM "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" inner join
							"db::app.Customer" on EXT_ID = GPART WHERE 
						"Z_RUN_SEQ_ID">:LV_TEST;
	LT_CUST_ID_EDITED = select to_int(GPART) as "CUST_ID" from :LT_CUST_EDITED;
	--Delete the events from Customer Events table
	--delete from "db::app.CustomerEvents" where CUST_ID in (LT_CUST_ID_EDITED) and EVENT_ID = (SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_CHRG_REG_DUNN));
    CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
		IV_EVENT_NAME=>:LV_CHRG_REG_DUNN,
		IT_CUST=>:LT_CUST_ID_EDITED
   );
    INSERT INTO "db::app.CustomerEvents"
   /*Charge Registration*/
   select DISTINCT 
			SAP.CUST_ID as CUST_ID, 
			--(SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_CHRG_REG_DUNN)) as EVENT_ID,
			--(SELECT EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_CHRG_REG_DUNN)) as EVENT_GROUP,
			NULL as EVENT_ID,
			:LV_ASSESS_EVENT_GRP as EVENT_GROUP,
			:LV_CHRG_REG_DUNN as EVENT_NAME,
			CAST(BUDAT as date) as INIT_DATE,
			NULL as END_DATE,1 as EVENT_VALUE,
			:LV_CHRG_REG_DUNN as DESCRIPTION,
			LEFT(BUDAT,6) as INIT_TS,
			NULL as END_TS 
			from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP" AS a
			INNER JOIN "db::app.Customer" as SAP on SAP.EXT_ID=a.GPART
			WHERE HVORG='4050' and TVORG='0525'AND KOFIZ='LT' and BETRH>0 AND AUGRD NOT IN ('04','14','05','99') AND GPART IN (select GPART from :LT_CUST_EDITED);
	select max(Z_RUN_SEQ_ID) INTO LV_MAX_SEQ_ID from "osr.edw.staging.td.rms.proxy.synonym::CV_DFKKOP";
	/*SELECT EVENT_ID INTO LV_MAX_EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_CHRG_REG_DUNN);
	  CALL "procedures.utils::PR_UPDATE_SEQ_ID_FOR_EVENTS"(
		SEQ_ID=> :LV_MAX_SEQ_ID,
		EVENT_ID=>:LV_MAX_EVENT_ID
	   );*/

	-- Generate Event IDs for newly created Events
	CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'ERP', I_TYPE => 3);	
   
   	UPDATE "db::adm.config.event.name" 
		SET "ICON" = LV_ICON, "PRIORITY" = 11,"LATEST_EXTRACTED_SEQUENCE" = LV_MAX_SEQ_ID, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE  UPPER("EVENT_NAME") = UPPER(LV_CHRG_REG_DUNN)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_ASSESS_EVENT_GRP);
  
END