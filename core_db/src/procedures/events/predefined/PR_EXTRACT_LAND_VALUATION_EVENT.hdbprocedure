PROCEDURE "procedures.events.predefined::PR_EXTRACT_LAND_VALUATION_EVENT" ( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   	DECLARE LV_LAND_VAL_D NVARCHAR(500) := 'Decrease in Land Valuation by 20%';
   	DECLARE LV_LAND_VAL_I NVARCHAR(500) := 'Increase in Land Valuation by 30%';
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
   LT_TEMP = SELECT *,
		TO_TIMESTAMP(LEAST(TAXYRSTARTDT, CHDATE), 'YYYYMMDD') INIT_DATE, 
		TO_TIMESTAMP('9999-12-31') END_DATE,
		CASE PREV_VAL
			WHEN 0 THEN NULL
			ELSE (BPRELVNTVAL / PREV_VAL) * 100
		END AS RATIO
	FROM (
		SELECT CHDATE, TAXYRSTARTDT, INTRENOPL, BPRELVNTVAL, LAG(BPRELVNTVAL) OVER (PARTITION BY INTRENOPL, ZZ_PARTNER ORDER BY TAXYRSTARTDT) AS PREV_VAL, ZZ_PARTNER
		FROM "osr.edw.staging.td.rms.proxy.synonym::CV_LTCNRESV"
		GROUP BY CHDATE, INTRENOPL, BPRELVNTVAL, ZZ_PARTNER, TAXYRSTARTDT
	) A
	LEFT JOIN (
		SELECT CUST_ID, EXT_ID
		FROM "db::app.Customer"
	) B ON A.ZZ_PARTNER = B.EXT_ID;
   
   
   /*Decrease in Land Valuation by 20%*/
   INSERT INTO "db::app.CustomerEvents" 
   	SELECT
		CUST_ID,
		(SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_LAND_VAL_D)) as EVENT_ID,
		(SELECT EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_LAND_VAL_D))	EVENT_GROUP,
		:LV_LAND_VAL_D EVENT_NAME,
		INIT_DATE, 
		END_DATE, 
		1 EVENT_VALUE, 
		:LV_LAND_VAL_D DESCRIPTION,
		YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) INIT_TS,
		YEAR(END_DATE)*100 + MONTH(END_DATE) END_TS
		from :LT_TEMP
	WHERE RATIO <= 100 - 20
	AND RATIO <> 0
	AND CUST_ID IS NOT NULL;
	
	
	/*Increase in Land Valuation by 30%*/
	INSERT INTO "db::app.CustomerEvents" 
   	SELECT
		CUST_ID,
		(SELECT EVENT_ID FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_LAND_VAL_I)) as EVENT_ID,
		(SELECT EVENT_GROUP FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:LV_LAND_VAL_I))	EVENT_GROUP,
		:LV_LAND_VAL_I EVENT_NAME,
		INIT_DATE, 
		END_DATE, 
		1 EVENT_VALUE, 
		:LV_LAND_VAL_I DESCRIPTION,
		YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) INIT_TS,
		YEAR(END_DATE)*100 + MONTH(END_DATE) END_TS
		from :LT_TEMP
	WHERE RATIO >= 100 + 30
	AND RATIO <> 0
	AND CUST_ID IS NOT NULL;
   
END
   