PROCEDURE "procedures.events.predefined::PR_EXTRACT_LATE_PAYMENT_INTEREST_EVENT" (
	IN IV_MODE INTEGER DEFAULT 0
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
	DECLARE LV_LATE_PMNT_1 CONSTANT NVARCHAR(500) := 'Late Payment Interest  >50 times in a Financial Year';
	DECLARE LV_LATE_PMNT_2 CONSTANT NVARCHAR(500) := 'Late Payment Interest  >25 times in a Financial Year';
	DECLARE LV_LATE_PMNT_3 CONSTANT NVARCHAR(500) := 'Late Payment Interest  >15 times in a Financial Year' ;
	DECLARE LV_LATE_PMNT_4 CONSTANT NVARCHAR(500) := 'Late Payment Interest  >5 times in a Financial Year';
   	DECLARE LV_EVENT_GROUP CONSTANT NVARCHAR(500) := 'LPI';
   	
   	DECLARE LV_MAX_SEQ_ID_1 INTEGER;
   	DECLARE LV_MAX_SEQ_ID_2 INTEGER;
   	DECLARE LV_MAX_SEQ_ID_3 INTEGER;
   	DECLARE LV_MAX_SEQ_ID_4 INTEGER;
	DECLARE LV_NEW_MAX_SEQ_ID_1 INTEGER;
	DECLARE LV_NEW_MAX_SEQ_ID_2 INTEGER;
	DECLARE LV_NEW_MAX_SEQ_ID_3 INTEGER;
	DECLARE LV_NEW_MAX_SEQ_ID_4 INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";		
	
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_LATE_PMNT_1);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_LATE_PMNT_2);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_LATE_PMNT_3);
	CALL "procedures.utils::PR_DELETE_ALL_DATA_FOR_EVENT"(IV_MODE=>:IV_MODE, IV_EVENT_NAME=>:LV_LATE_PMNT_4);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_SEQ_ID_1 from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_LATE_PMNT_1);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_SEQ_ID_2 from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_LATE_PMNT_2);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_SEQ_ID_3 from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_LATE_PMNT_3);
	SELECT OUT_MAX_SEQ_ID into LV_MAX_SEQ_ID_4 from "functions::TF_GET_MAX_SEQID_EVENT"(:LV_LATE_PMNT_4);
	
	IF :LV_MAX_SEQ_ID_1 IS NULL THEN
		LV_MAX_SEQ_ID_1 = 0;
	END IF;
	IF :LV_MAX_SEQ_ID_2 IS NULL THEN
		LV_MAX_SEQ_ID_2 = 0;
	END IF;
	IF :LV_MAX_SEQ_ID_3 IS NULL THEN
		LV_MAX_SEQ_ID_3 = 0;
	END IF;
	IF :LV_MAX_SEQ_ID_4 IS NULL THEN
		LV_MAX_SEQ_ID_4 = 0;
	END IF;
	
	LT_CUST_1        = SELECT CUST_ID FROM "db::app.CustomerEvents" 
							WHERE RECORD_ID>:LV_MAX_SEQ_ID_1;
							
	LT_CUST_2        = SELECT CUST_ID FROM "db::app.CustomerEvents" 
							WHERE RECORD_ID>:LV_MAX_SEQ_ID_2;
							
	LT_CUST_3        = SELECT CUST_ID FROM "db::app.CustomerEvents" 
							WHERE RECORD_ID>:LV_MAX_SEQ_ID_3;
							
	LT_CUST_4        = SELECT CUST_ID FROM "db::app.CustomerEvents" 
							WHERE RECORD_ID>:LV_MAX_SEQ_ID_4;
							
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
	IV_EVENT_NAME=>:LV_LATE_PMNT_1,
	IT_CUST=>:LT_CUST_1);
	
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
	IV_EVENT_NAME=>:LV_LATE_PMNT_2,
	IT_CUST=>:LT_CUST_2);
	
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
	IV_EVENT_NAME=>:LV_LATE_PMNT_3,
	IT_CUST=>:LT_CUST_3);
	
	CALL "procedures.utils::PR_DELETE_EVENT_DATA_FOR_CUST"(
	IV_EVENT_NAME=>:LV_LATE_PMNT_4,
	IT_CUST=>:LT_CUST_4);
							
	LT_CUST_ID = SELECT CUST_ID FROM :LT_CUST_1
					UNION SELECT CUST_ID FROM :LT_CUST_2
					UNION SELECT CUST_ID FROM :LT_CUST_3
					UNION SELECT CUST_ID FROM :LT_CUST_4;
										
	LT_LATEPAYMENT = 	SELECT 	a.CUST_ID as CUST_ID, 	--COUNT(CUST_ID) AS NUM, 
							INIT_DATE "INIT_DATE",
							TO_TIMESTAMP('9999-12-31') "END_DATE",
							ROW_NUMBER() OVER (PARTITION BY a.CUST_ID, YEAR(INIT_DATE) ORDER BY a.CUST_ID, INIT_DATE) AS NUM
						FROM "db::app.CustomerEvents" a
						INNER JOIN :LT_CUST_ID delt on a.CUST_ID = delt.CUST_ID
						WHERE EVENT_NAME = 'Late Payment Interest'
						GROUP BY a.CUST_ID, INIT_DATE
						ORDER BY a.CUST_ID, INIT_DATE;
						
	INSERT INTO "db::app.CustomerEvents" 
	(SELECT 	CUST_ID, NULL,
			:LV_EVENT_GROUP as EVENT_GROUP,
			:LV_LATE_PMNT_4 EVENT_NAME,
		    INIT_DATE, END_DATE, 	1 EVENT_VALUE, 
			'Customer Incurred Late Payment Interest More than 5 times in the Year' DESCRIPTION,
			YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) INIT_TS,
			YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) END_TS
			FROM :LT_LATEPAYMENT	WHERE NUM = 6)
	UNION ALL
		
	(SELECT  CUST_ID, NULL,
			:LV_EVENT_GROUP EVENT_GROUP,
			:LV_LATE_PMNT_3 EVENT_NAME,
			INIT_DATE, END_DATE, 	1 EVENT_VALUE, 
			'Customer Incurred Late Payment Interest More than 15 times in the Year' DESCRIPTION,
				YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) INIT_TS,
				YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) END_TS
			FROM :LT_LATEPAYMENT WHERE NUM = 16)
	
	UNION ALL
	
	(SELECT	CUST_ID, NULL,
			:LV_EVENT_GROUP as EVENT_GROUP,
			:LV_LATE_PMNT_2 EVENT_NAME,
			INIT_DATE, END_DATE, 	1 EVENT_VALUE,
			'Customer Incurred Late Payment Interest More than 25 times in the Year' DESCRIPTION,
				YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) INIT_TS,
				YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) END_TS
				FROM :LT_LATEPAYMENT WHERE NUM = 26)
	
	UNION ALL
	
	(SELECT	CUST_ID, NULL,
			:LV_EVENT_GROUP as EVENT_GROUP,
			:LV_LATE_PMNT_1 EVENT_NAME,
			INIT_DATE, 	END_DATE, 	1 EVENT_VALUE,
			'Customer Incurred Late Payment Interest More than 50 times in the Year' DESCRIPTION,
				YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) INIT_TS,
				YEAR(INIT_DATE)*100 + MONTH(INIT_DATE) END_TS
				FROM :LT_LATEPAYMENT WHERE NUM = 51);

	select max(RECORD_ID) INTO LV_MAX_SEQ_ID_1 from "db::app.CustomerEvents";
	select max(RECORD_ID) INTO LV_MAX_SEQ_ID_2 from "db::app.CustomerEvents";
	select max(RECORD_ID) INTO LV_MAX_SEQ_ID_3 from "db::app.CustomerEvents";
	select max(RECORD_ID) INTO LV_MAX_SEQ_ID_4 from "db::app.CustomerEvents";
	
	CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'PREDEFINED', I_TYPE => 1);
	
	UPDATE "db::adm.config.event.name" 
		SET "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_SEQ_ID_1, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_LATE_PMNT_1)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GROUP);	
		
	UPDATE "db::adm.config.event.name" 
		SET "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_SEQ_ID_2, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_LATE_PMNT_2)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GROUP);	
		
	UPDATE "db::adm.config.event.name" 
		SET "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_SEQ_ID_3, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_LATE_PMNT_3)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GROUP);	
		
	UPDATE "db::adm.config.event.name" 
		SET "LATEST_EXTRACTED_SEQUENCE" = LV_MAX_SEQ_ID_4, "LAST_EXTRACTED_DATE" = CURRENT_UTCTIMESTAMP
		WHERE UPPER("EVENT_NAME") = UPPER(LV_LATE_PMNT_4)
		AND UPPER("CATEGORY_NAME") = UPPER(LV_EVENT_GROUP);	

END