PROCEDURE "procedures.utils::PR_DELETE_MASTERDATA_FOR_CUST" (
	IN IV_ENTITY_NAME NVARCHAR(500),
	IN IT_CUST_ID TABLE (
		CUST_ID bigint
	),
	IN IV_EVENT_NAME NVARCHAR(500) DEFAULT null
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
	DECLARE LV_CUST_ENTITY_NAME CONSTANT STRING := 'CUSTOMER';
	DECLARE LV_CUST_ATTR_ENTITY_NAME CONSTANT STRING := 'CUSTOMER ATTRIBUTE';
	DECLARE LV_CUST_VALUE_ENTITY_NAME CONSTANT STRING := 'CUSTOMER VALUE';
	DECLARE LV_CRM_EVENT CONSTANT STRING := 'CRM';
	IF IV_ENTITY_NAME = :LV_CUST_ENTITY_NAME
		THEN
			DELETE FROM "db::app.CustomerEvents" WHERE CUST_ID IN (SELECT CUST_ID FROM :IT_CUST_ID);
	ELSEIF IV_ENTITY_NAME = :LV_CUST_ATTR_ENTITY_NAME
		THEN
			DELETE FROM "db::app.CustomerAttributes" WHERE CUST_ID IN (SELECT CUST_ID FROM :IT_CUST_ID);
	ELSEIF IV_ENTITY_NAME = :LV_CUST_VALUE_ENTITY_NAME
		THEN
			DELETE FROM "db::app.CustomerValues" WHERE CUST_ID IN (SELECT CUST_ID FROM :IT_CUST_ID);
	--ELSE IF IV_ENTITY_NAME = :LV_CRM_EVENT
	ELSE
		delete from "db::app.CustomerEvents" where (CUST_ID, "EVENT_ID.ID") in (select CUST_ID, "EVENT_ID.ID" from "db::app.CustomerEvents" 
																				where CUST_ID in (select CUST_ID from :IT_CUST_ID) 
																				and "EVENT_ID.ID" in (SELECT "EVENT_ID" FROM "functions::TF_GET_EVENT_DETAIL_FOR_EVENT_NAME"(:IV_EVENT_NAME)));
	END IF;
   
END