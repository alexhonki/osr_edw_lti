PROCEDURE "procedures.text::PR_CRM_EVENT_CREATE_MAIN" ( 
	IV_MODE INTEGER DEFAULT 0
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
	DECLARE LV_ENTITY_NAME CONSTANT NVARCHAR(500) :='CRM';
	DECLARE CURSOR c_crm FOR
		SELECT EVENT_NAME, CATEGORY_NAME, PRIORITY, ICON FROM "db::text.CRM_Event_Mapping" GROUP BY EVENT_NAME, CATEGORY_NAME, PRIORITY, ICON ORDER BY PRIORITY ASC;
	DECLARE LT_OBJECT_ID TABLE (OBJECT_ID NVARCHAR(10));
	DECLARE LT_EVENT TABLE (CUST_ID BIGINT,
		DESCRIPTION VARCHAR(1000),
		EVENT_NAME VARCHAR(200),
		EVENT_GROUP VARCHAR(200),
		INIT_DATE TIMESTAMP,
		END_DATE TIMESTAMP,
		INIT_TS INTEGER,
		END_TS INTEGER);
	DECLARE LV_LAST_MAX_SEQ_ID INTEGER;
	DECLARE LV_NEW_MAX_SEQ_ID INTEGER;
	DECLARE LV_DELTA_COUNT INTEGER;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
		SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "synonyms::dummy";
	
	CALL "procedures.utils::PR_DELETE_ALL_MASTERDATA"(:IV_MODE, :LV_ENTITY_NAME);
	SELECT max(Z_RUN_SEQ_ID) INTO LV_NEW_MAX_SEQ_ID from "models.crm::CV_CRM_INTERACTION";
	SELECT OUT_MAX_SEQ_ID into LV_LAST_MAX_SEQ_ID from "functions::TF_GET_MAX_SEQID_MASTERDATA"(:LV_ENTITY_NAME);
	IF :LV_NEW_MAX_SEQ_ID > :LV_LAST_MAX_SEQ_ID THEN
		FOR curr_row AS c_crm DO
			CALL "procedures.text::PR_RETURN_CRM_EVENT_DATA"(curr_row.EVENT_NAME, curr_row.CATEGORY_NAME,curr_row.PRIORITY,:LV_LAST_MAX_SEQ_ID,:LT_OBJECT_ID ,:LT_EVENT, LT_EVENT ,LT_OBJECT_ID);
		END FOR;
	
		LT_FINAL_EVENT = SELECT * FROM :LT_EVENT ;
		
		INSERT INTO "db::app.CustomerEvents"
		("CUST_ID", "EVENT_GROUP", "EVENT_NAME", "INIT_DATE", "END_DATE", "DESCRIPTION", "INIT_TS", "END_TS")
				(SELECT CUST_ID, EVENT_GROUP, EVENT_NAME, INIT_DATE, END_DATE, DESCRIPTION, INIT_TS, END_TS from :LT_FINAL_EVENT);
				
		CALL "procedures.utils::PR_UTIL_POPULATE_EVENT_ID"(I_EVENT_SOURCE => 'CRM', I_TYPE => 3);
		
		FOR curr_row_upd AS c_crm DO
			UPDATE "db::adm.config.event.name" SET "ICON" = curr_row_upd.ICON
			where (UPPER("EVENT_NAME") = UPPER(CONCAT(CONCAT(CONCAT('CRM - ', 'Inbound'), ' - '), curr_row_upd.EVENT_NAME))
				OR UPPER("EVENT_NAME") = UPPER(CONCAT(CONCAT(CONCAT('CRM - ', 'Outbound'), ' - '), curr_row_upd.EVENT_NAME))
				OR UPPER("EVENT_NAME") = UPPER(CONCAT(CONCAT(CONCAT('CRM - ', 'Internal'), ' - '), curr_row_upd.EVENT_NAME)))
				AND	UPPER("SOURCE") = 'CRM';
		END FOR;
		
		CALL "procedures.utils::PR_UPDATE_SEQ_ID_FOR_MASTERDATA"(
			IV_SEQ_ID=> :LV_NEW_MAX_SEQ_ID,
			IV_ENTITY_NAME=>:LV_ENTITY_NAME
		);
	END IF;
END