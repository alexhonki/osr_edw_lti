PROCEDURE "procedures.text::PR_RETURN_CRM_EVENT_DATA" (
	IN IV_QUERY NVARCHAR(5000),
	IN IV_EVENT_NAME STRING,
	IN IV_EVENT_GROUP STRING,
	IN IT_EXCL_ID TABLE (
		OBJECT_ID NVARCHAR(10)
		),
	OUT OT_EVENT_OUT TABLE(
		CUST_ID BIGINT,
		DESCRIPTION VARCHAR(1000),
		EVENT_NAME VARCHAR(200),
		EVENT_GROUP VARCHAR(200),
		INIT_DATE TIMESTAMP,
		END_DATE TIMESTAMP,
		INIT_TS INTEGER,
		END_TS INTEGER
		),
	OUT OT_EXCL_ID TABLE (
		OBJECT_ID NVARCHAR(10)
		)
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   	LT_TEMP = SELECT CUST_ID,
					OBJECT_ID,
					:IV_EVENT_NAME as DESCRIPTION,
					:IV_EVENT_NAME as EVENT_NAME,
					:IV_EVENT_GROUP as EVENT_GROUP,
					POSTING_DATE as INIT_DATE,
					POSTING_DATE as END_DATE,
					LEFT(POSTING_DATE,6) as INIT_TS,
				    NULL as END_TS FROM "models.crm::CV_CRM_INTERACTION" WHERE OBJECT_ID NOT IN (SELECT OBJECT_ID FROM :IT_EXCL_ID);
	LT_TEMP_FILTER = APPLY_FILTER(:LT_TEMP, :IV_QUERY);
	OT_EVENT_OUT = SELECT CUST_ID,
							DESCRIPTION,
							EVENT_NAME,
							EVENT_GROUP,
							INIT_DATE,
							END_DATE,
							INIT_TS,
							END_TS FROM :LT_TEMP_FILTER;
	OT_EXCL_ID = SELECT OBJECT_ID FROM :IT_EXCL_ID UNION SELECT OBJECT_ID FROM :LT_TEMP;
END