'use strict';

var crypto = require('crypto');

var SESSION_SECRET_LENGTH = 64;

exports.generateSessionSecret = function() {
  return crypto.randomBytes(SESSION_SECRET_LENGTH).toString('hex');
};

exports.setCookie = function (res, cookie) {
  var oldCookies = res.getHeader('Set-Cookie');
  res.setHeader('Set-Cookie', oldCookies ? [].concat(oldCookies, cookie) : cookie);
};

exports.getSessionCookieName = function() {
  // This cookie name 'JSESSIONID' tells Cloud Foundry to use session stickiness
  // https://docs.cloudfoundry.org/devguide/deploy-apps/prepare-to-deploy.html#sessions
  // https://github.com/cloudfoundry/gorouter/issues/26
  return getCookieName('AR-', 'JSESSIONID');
};

exports.getRedirectLocationCookieName = function() {
  return getCookieName('ARLOC-', 'locationAfterLogin');
};

function getCookieName(prefix, defaultCookieName) {
  if ('USE_JSESSION_COOKIE_SUFFIX_REQUIRED' in process.env && process.env.VCAP_APPLICATION) {
    // With port based routing the session cookies of two app router applications may
    // overwrite/reuse each other if the browser ignores the port of the applications
    var vcapApplication = JSON.parse(process.env.VCAP_APPLICATION);
    if (vcapApplication.application_id) {
      return prefix + compactGuid(vcapApplication.application_id);
    }
  }
  return defaultCookieName;
}

function compactGuid(guid) {
  return guid.split('-').map(function (segment) {
    return parseInt(segment, 16).toString(36);
  }).join('');
}
