'use strict';

var winston = require('winston');


exports.createFileLogger = function (filepath) {
  return new (winston.Logger)({
    levels: { audit: 0 },
    transports: [
      new (winston.transports.File)({
        filename: filepath,
        level: 'audit',
        timestamp: false,
        json: false,
        showLevel: false,
        formatter: function (options) {
          return options.message;
        }
      })
    ]
  });
};

exports.createConsoleLogger = function () {
  return new (winston.Logger)({
    levels: { audit: 0 },
    transports: [
      new (winston.transports.Console)({
        level: 'audit',
        showLevel: false
      })
    ]
  });
};

exports.log = function (message, callback) {
  this.audit(message.toString(), function (err) {
    // we do not pass the callback directly, because winston passes more arguments than just the error
    callback(err);
  });
};
