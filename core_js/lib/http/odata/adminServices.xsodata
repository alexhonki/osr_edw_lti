service namespace "com.odata.v2.sap.cr" {

	//-------------------------------
 	// U S E R  I N T E R F A C E (UI)
 	//-------------------------------
	"models.ui::CV_LABEL_DEFINITION"	as "UILabelDefinition"
		keys ("REACTION_TYPE","PAGE","COMPONENT","LANGUAGE")
		concurrencytoken  ("CHANGED_ON")
		create using "exits:UI.xsjslib::createLabelDefinitions"
		update using "exits:UI.xsjslib::updateLabelDefinitions";
		
	//-------------------------------
 	// CONFIG
 	//-------------------------------
 	// Attribute Type Configureation
 	"models.adm::CV_ATTRIBUTE_TYPES" as "ConfigAttributeTypes"
 		keys ("ATTRIBUTE_ID")
 		update using "exits:Config.xsjslib::updateAttributeTypes";
 	
	// Prediction Date
	"models.adm::CV_PREDICTION_DATE" as "ConfigPredictionDate"
		keys ("SEQ")
		concurrencytoken  ("CHANGED_ON")
		update using "exits:Config.xsjslib::updatePredictionDate";
	
	// Training Date
	"models.adm::CV_TRAINING_DATE" as "ConfigTrainingDate"
		keys ("SEQ")
		concurrencytoken  ("CHANGED_ON")
		update using "exits:Config.xsjslib::updateTrainingDate";
	// Combined Event Training Date
	"models.adm::CV_COMBINED_EVENTS_TRAINING_DATE" as "ConfigCombinedEventTrainDate"
		keys ("SEQ")
		concurrencytoken  ("CHANGED_ON")
		update using "exits:Config.xsjslib::updateCombinedEventTrainingDate";
	// Configuration Screen
	"models.adm::CV_BUCKET_CONFIG" as "Config"
		key ("BUCKET_ID", "SEQ") 
		concurrencytoken  ("CHANGED_ON")
		update using "exits:Config.xsjslib::updateConfig";
	
	// Use Case (Reaction Type) Config
	"models.adm::CV_CONFIG" as "UseCaseSettings"
		key ("BUCKET_ID", "SEQ", "REACTION_TYPE") 
		concurrencytoken  ("CHANGED_ON")
		update using "exits:Config.xsjslib::updateConfig";
	
		// Use Case Sub Config
	"models.adm::CV_REACTION_TYPE" as "UseCaseConfig"
		key ("REACTION_TYPE") 
		concurrencytoken  ("CHANGED_ON")
		navigates ("ConfigReactionType_Config" as "Config",
		           "ConfigReactionType_LabelDefinition"  as "LabelDefinition")
		// create using "exits:Config.xsjslib::createConfigReactionType"          
		update using "exits:Config.xsjslib::updateConfigReactionType";

    association "ConfigReactionType_Config" 
        principal "UseCaseConfig"("REACTION_TYPE") multiplicity "1" 
        dependent "UseCaseSettings"("REACTION_TYPE") multiplicity "*";
    
    association "ConfigReactionType_LabelDefinition" 
        principal "UseCaseConfig"("REACTION_TYPE") multiplicity "1" 
        dependent "UILabelDefinition"("REACTION_TYPE") multiplicity "*";
    
    // Pre-defined Events Config
	"models.apps.event::CV_PREDEFINED_EVENTS_TEMPLATE" as "PredefinedEventsTemplate"
	    keys ("TEMPLATE_ID")
	    navigates ("PredefinedEventsConfig_Template" as "DerivedEvents" from dependent);
	    
	"models.apps.event::CV_PREDEFINED_EVENTS_CONFIG" as "PredefinedEventsConfig"
		keys ("ID")
		navigates ("PredefinedEventsConfig_Template" as "Template")
		create using "exits:PredefinedEvents.xsjslib::createDerivedEvent"          
		update using "exits:PredefinedEvents.xsjslib::updateDerivedEvent"
		delete forbidden;
		
    association "PredefinedEventsConfig_Template" 
        principal "PredefinedEventsConfig"("TEMPLATE_ID") multiplicity "*" 
        dependent "PredefinedEventsTemplate"("TEMPLATE_ID") multiplicity "1";
    
    // Event Management Entity    
    "models.apps.event::CV_EVENT_MANAGEMENT"  as "EventManagement"
    	keys ("ID")
    	update using "exits:Config.xsjslib::updateEventManagement";
   	
   	// Audit Log Screen
	"models.adm::CV_ADMIN_AUDIT_LOG" as "AuditLog"
		key generate local "GEN_ID"
		aggregates always;
		
	// Customer
    "models.apps.customer::CV_CUSTOMER_LIST" as "Customer"
		keys("CUST_ID")
		navigates(
			"Customer_KeyValues"	as "KeyValues",
			"Customer_Pulse"		as "Pulse",
			"Customer_Details"		as "Details",
			"Customer_Reactions"	as "Reactions"
			)
		create forbidden
		update using "exits:Customer.xsjslib::updateCustomer";
	
	association "Customer_KeyValues" 
		principal "Customer"("CUST_ID") multiplicity "1"
		dependent "CustomerkeyValues"("CUST_ID") multiplicity "*";	
	
	association "Customer_Pulse" 
		principal "Customer"("CUST_ID") multiplicity "1"
		dependent "CustPulse"("CUST_ID") multiplicity "*";
		
	association "Customer_Details" 
		principal "Customer"("CUST_ID") multiplicity "1"
		dependent "CustomerDetails"("CUST_ID") multiplicity "*"; 
	
	 association "Customer_Reactions" 
		principal "Customer"("CUST_ID") multiplicity "1"
		dependent "CustomerReactions"("CUST_ID") multiplicity "*"; 
}

annotations {
   enable OData4SAP;
}

settings {
  support null;
}