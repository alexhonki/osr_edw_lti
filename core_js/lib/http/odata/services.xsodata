service namespace "com.odata.v2.sap.cr" {
	
	//-------------------------------
 	// F I L T E R
 	//-------------------------------

	//Filters - Entity Used for Filter Bar Generation
	"models.adm::CV_FILTERS" as "FilterBar" 
		keys ("FIELD_GROUP","FIELD_NAME") 
		navigates ("FilterBar_ValueHelp" as "ValueHelp");

    association via parameters  "FilterBar_ValueHelp" 
        principal "FilterBar" ("FIELD_NAME") multiplicity "1" 
        dependent "VL_VALUE_HELP" ("IP_FIELD_NAME") multiplicity "*";	

    //-------------------------------
 	// V A L U E H E L P
 	//-------------------------------
 
	// Value help
 	"models.adm::CV_VALUE_HELP" as "VL_VALUE_HELP" key generate local "GEN_ID" parameters via entity;

	//-------------------------------
 	// T R E N D S
 	//------------------------------- 
	
	// Trend - Debtor rate	
	"models.apps.trend::CV_DEBTOR_RATE" as "TrendRate" 
		key generate local "GEN_ID" 
		aggregates always 
		parameters via entity;
	
	// Trend - Outstanding Revenue	
	"models.apps.trend::CV_OUTSTANDING_REVENUE" as "Trend" 
		key generate local "GEN_ID" 
		aggregates always 
		parameters via entity;
		
	// Trend - Top Events for reacted customers
	"models.apps.customer::CV_TOP_EVENTS" as "TopEvents" 
       	key generate local "GEN_ID" 
        aggregates always
        parameters via entity;
        
	// Trend - At risk customers
	"models.apps.customer::CV_AT_RISK_BUCKET" as "AtRiskCustomersTrend"
 		key generate local "GEN_ID"
 		aggregates always
		parameters via entity;
	
	// Customer Changes Dashboard Trend    
    "models.apps.trend::CV_CUSTOMER_CHANGES" as "TrendCustomerChanges"  
    	key ("TIME_SEGMENT")
    	//parameters via key and entity;TBC
    	parameters via  entity;
	
	//-------------------------------
 	// E V E N T   A N A L Y S I S
 	//------------------------------- 	

 	// Event Overview
	"models.apps.event::CV_EVENT_OVERVIEW" as "EventOverview"
 		keys ("EVENT_GROUP","EVENT_NAME","EVENT_ID")
 		navigates ( "EventOverview_Customer" as "Customer")
		parameters via key and entity;
    
   // Customer By Event
	"models.apps.customer::CV_CUSTOMER_BY_EVENT" as "CustomerByEvent"
		keys("CUST_ID","EVENT_YEAR","INIT_DATE")
		parameters via key and entity;
	
	// Event => Customer
    association via parameters "EventOverview_Customer" 
        principal "EventOverview"("IP_FILTER","IP_FROM","IP_TO","EVENT_ID") multiplicity "1" 
        dependent "CustomerByEvent"("IP_FILTER","IP_FROM","IP_TO","IP_EVENT_ID") multiplicity "*"; 
	//-------------------------------
 	// A T  R I S K
 	//-------------------------------       

	// At Risk Customers
	"models.apps.customer::CV_AT_RISK_CUSTOMER" as "AtRiskCustomers"
		key ("CUST_ID") 
		parameters via key and entity;
	
	// At Risk Visual Filter	
	"models.apps.customer::CV_AT_RISK_BUCKET" as "AtRiskCustomerBuckets"
 		key generate local "GEN_ID"
 		aggregates always
		parameters via entity;
			
	//-------------------------------
 	// U S E R  I N T E R F A C E (UI)
 	//-------------------------------
	"models.ui::CV_LABEL_DEFINITION"	as "UILabelDefinition"
		keys ("REACTION_TYPE","PAGE","COMPONENT","LANGUAGE")
		concurrencytoken  ("CHANGED_ON")
		create using "exits:UI.xsjslib::createLabelDefinitions"
		update using "exits:UI.xsjslib::updateLabelDefinitions";
		
	//-------------------------------
 	// CONFIG
 	//-------------------------------
 	
	// Prediction Date
	"models.adm::CV_PREDICTION_DATE" as "ConfigPredictionDate"
		keys ("SEQ")
		concurrencytoken  ("CHANGED_ON")
		update using "exits:Config.xsjslib::updatePredictionDate";
	
	// Use Case (Reaction Type) Config
	"models.adm::CV_CONFIG" as "UseCaseSettings"
		key ("BUCKET_ID", "SEQ", "REACTION_TYPE") 
		concurrencytoken  ("CHANGED_ON")
		update using "exits:Config.xsjslib::updateConfig";
	
		// Use Case Sub Config
	"models.adm::CV_REACTION_TYPE" as "UseCaseConfig"
		key ("REACTION_TYPE") 
		concurrencytoken  ("CHANGED_ON")
		navigates ("ConfigReactionType_Config" as "Config",
		           "ConfigReactionType_LabelDefinition"  as "LabelDefinition")
		update using "exits:Config.xsjslib::updateConfigReactionType";

    association "ConfigReactionType_Config" 
        principal "UseCaseConfig"("REACTION_TYPE") multiplicity "1" 
        dependent "UseCaseSettings"("REACTION_TYPE") multiplicity "*";
    
    association "ConfigReactionType_LabelDefinition" 
        principal "UseCaseConfig"("REACTION_TYPE") multiplicity "1" 
        dependent "UILabelDefinition"("REACTION_TYPE") multiplicity "*";
    
}

annotations {
   enable OData4SAP;
}

settings {
  support null;
}